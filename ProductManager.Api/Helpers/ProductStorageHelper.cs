using System.Text.Json;using ProductManager.Api.Models.Entity;namespace ProductManager.Api.Helpers;public static class ProductStorageHelper{    public static readonly JsonSerializerOptions JsonOptions = new JsonSerializerOptions    {        WriteIndented = true,        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,        DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull    };    public static void InitializeStorage(string filePath)    {        var directory = Path.GetDirectoryName(filePath);        if (!Directory.Exists(directory))        {            Directory.CreateDirectory(directory);        }                if (!File.Exists(filePath))        {            using var fileStream = new FileStream(filePath, FileMode.Create, FileAccess.Write);            using var streamWriter = new StreamWriter(fileStream);            streamWriter.Write("[]");        }    }        public static int GenerateNewId(List<Product> products)    {        return products.Count > 0 ? products.Max(p => p.Id) + 1 : 1;    }}